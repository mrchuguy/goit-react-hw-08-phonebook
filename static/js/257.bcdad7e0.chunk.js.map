{"version":3,"file":"static/js/257.bcdad7e0.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","components/Modal/Modal.styled.jsx","components/UpdateForm/UpdateForm.styled.jsx","components/UpdateForm/UpdateForm.jsx","components/Modal/Modal.jsx","components/ListItem/ListItem.styled.jsx","components/ListItem/ListItem.jsx","components/List/List.styled.jsx","components/List/List.jsx","Pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { ImPlus } from 'react-icons/im';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.33;\n  color: #919399;\n  margin-bottom: 21px;\n`;\n\nexport const Input = styled.input`\n  max-width: 500px;\n  margin-top: 9px;\n  color: #2c2d2e;\n  font-size: 18px;\n  line-height: 1.33;\n  padding: 11px 15px;\n  border-radius: 6px;\n  border: 1px solid rgba(0, 16, 61, 0.3);\n  &:hover,\n  :focus {\n    border: 1px solid #465efd;\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  display: flex;\n  border: none;\n  justify-content: center;\n  width: 180px;\n  padding: 12px 20px;\n  color: #fff;\n  font-size: 18px;\n  line-height: 1.33;\n  font-weight: 400;\n  background: #465efd;\n  border-radius: 12px;\n  &:hover,\n  &:focus {\n    background: #528fdf;\n  }\n`;\n\nexport const Icon = styled(ImPlus)`\n  margin-left: 10px;\n`;\n","import { useState } from 'react';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from '../../redux/contactsApi';\nimport { Box } from '../Box/Box';\nimport { Label, Input, Button, Icon } from './Form.styled';\nimport { nanoid } from 'nanoid';\nimport Notiflix from 'notiflix';\n\nexport function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = nanoid();\n  const telInputId = nanoid();\n\n  const { data: contacts } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleChange = ({ target: { name, value } }) => {\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const onSubmitForm = event => {\n    event.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Notiflix.Notify.failure(`${name} is already in contacts`);\n    } else {\n      addContact(newContact);\n      Notiflix.Notify.success(`Contact added`);\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <Box\n      as=\"form\"\n      onSubmit={onSubmitForm}\n      autoComplete=\"off\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      maxWidth={500}\n      mx=\"auto\"\n    >\n      <Label htmlFor={nameInputId}>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n          id={nameInputId}\n          autoComplete=\"off\"\n        />\n      </Label>\n      <Label htmlFor={telInputId}>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n          id={telInputId}\n          autoComplete=\"off\"\n        />\n      </Label>\n      <Button type=\"submit\" disabled={isLoading}>\n        Add contact\n        <Icon />\n      </Button>\n    </Box>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  line-height: 1.33px;\n  color: #919399;\n`;\n\nexport const Input = styled.input`\n  width: 500px;\n  margin: 20px auto 0 auto;\n  color: #2c2d2e;\n  font-size: 18px;\n  line-height: 1.33;\n  padding: 11px 15px;\n  border-radius: 6px;\n  border: 1px solid rgba(0, 16, 61, 0.3);\n  &:hover,\n  :focus {\n    border: 1px solid #465efd;\n    outline: none;\n  }\n`;\n","import { Label, Input } from './Filter.styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from '../../redux/filterSlice';\nimport { selectFilter } from 'redux/authSelectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const filterContact = event => {\n    dispatch(changeFilter(event.target.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        value={filter}\n        onChange={filterContact}\n        placeholder=\"Enter filter\"\n      />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BackDrop = styled.div`\n  z-index: 1;\n  overflow: hidden;\n`;\n\n","import styled from 'styled-components';\n\nexport const FormBox = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n`;\n\nexport const StyleUpdateForm = styled.form`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 450px;\n  box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.08);\n  background: #fff;\n  border-radius: 16px;\n  padding: 32px 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  line-height: 1.33px;\n  color: #919399;\n  margin-bottom: 18px;\n`;\n\nexport const Input = styled.input`\n  width: 400px;\n  margin: 20px auto 0 auto;\n  color: #2c2d2e;\n  font-size: 18px;\n  line-height: 1.33;\n  padding: 11px 15px;\n  border-radius: 6px;\n  border: 1px solid rgba(0, 16, 61, 0.3);\n  &:hover,\n  :focus {\n    border: 1px solid #465efd;\n    outline: none;\n  }\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 7px;\n  right: 7px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  border-radius: 50%;\n  border: 1px solid #00103d1f;\n  padding: 7px;\n  background: transparent;\n  color: #fff;\n  transition: transform 0.3s;\n  :hover,\n  :focus {\n    transform: rotate(90deg);\n  }\n`;\n\nexport const EditButton = styled.button`\n  cursor: pointer;\n  text-decoration: none;\n  padding: 12px 50px;\n  border: none;\n  color: #fff;\n  margin-right: 10px;\n  font-size: 18px;\n  line-height: 1.33;\n  font-weight: 400;\n  background: #465efd;\n  border-radius: 12px;\n  &:hover,\n  &:focus {\n    background: #528fdf;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  useUpdateContactMutation,\n  useGetContactsQuery,\n} from '../../redux/contactsApi';\nimport {\n  FormBox,\n  StyleUpdateForm,\n  Input,\n  Label,\n  CloseButton,\n  EditButton,\n} from './UpdateForm.styled';\nimport { GrClose } from 'react-icons/gr';\n\nexport const UpdateForm = ({ id, toggleModal }) => {\n  const { data } = useGetContactsQuery();\n  const [editContact] = useUpdateContactMutation();\n\n  const [name, setName] = useState(() => {\n    const contact = data?.find(contact => contact.id === id);\n    return contact?.name;\n  });\n\n  const [number, setNumber] = useState(() => {\n    const contact = data?.find(contact => contact.id === id);\n    return contact?.number;\n  });\n\n  const handleChange = ({ target: { name, value } }) => {\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const onEditContact = async event => {\n    event.preventDefault();\n    const value = { id, name, number };\n    try {\n      await editContact(value);\n    } catch (error) {\n      console.log(error);\n    }\n    toggleModal();\n  };\n\n  const onClose = () => {\n    toggleModal();\n  };\n\n  return (\n    <FormBox>\n      <StyleUpdateForm onSubmit={onEditContact}>\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n          />\n        </Label>\n\n        <EditButton type=\"submit\">Update contact</EditButton>\n\n        <CloseButton onClick={onClose}>\n          <GrClose />\n        </CloseButton>\n      </StyleUpdateForm>\n    </FormBox>\n  );\n};\n","import { BackDrop } from './Modal.styled';\nimport { UpdateForm } from '../UpdateForm/UpdateForm';\n\nexport const Modal = ({ id, toggleModal }) => {\n\n  return (\n    <>\n      <BackDrop>\n        <UpdateForm toggleModal={toggleModal} id={id} />\n      </BackDrop>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5px 5px;\n  border-bottom: 1px solid rgba(0, 16, 61, 0.12); ;\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  width: 80%;\n  justify-content: space-between;\n  font-size: 20px;\n  line-height: 1.33;\n  color: #2c2d2e;\n`;\n\nexport const Name = styled.span``;\n\nexport const Number = styled.span``;\n\nexport const ButtonDelete = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  border-radius: 50%;\n  border: 1px solid red;\n  padding: 7px;\n  background-color: red;\n  color: #fff;\n  :hover,\n  :focus {\n    background-color: #fff;\n    color: red;\n  }\n`;\n\nexport const ButtonEdit = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  border-radius: ${props => props.theme.radii.round};\n  border: 1px solid #465efd;\n  padding: 7px;\n  background-color: #465efd;\n  color: ${props => props.theme.colors.white};\n  :hover,\n  :focus {\n    background-color: #fff;\n    color: #465efd;\n  }\n`;\n","import { useState } from 'react';\nimport { useDeleteContactMutation } from '../../redux/contactsApi';\nimport { Modal } from '../Modal/Modal';\nimport {\n  ContactItem,\n  TextWrapper,\n  Name,\n  Number,\n  ButtonDelete,\n  ButtonEdit,\n} from './ListItem.styled';\nimport { ImCross } from 'react-icons/im';\nimport { ImPencil2 } from 'react-icons/im';\nimport PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\n\nexport const ListItem = ({ name, number, id }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  const [addContact, setAddContact] = useState(false);\n\n  const toggleModal = () => {\n    setAddContact(prevState => !prevState);\n  };\n\n  const onDeleteContact = event => {\n    deleteContact(event.currentTarget.parentElement.id);\n    Notiflix.Notify.success(`Contact deleted`);\n  };\n\n  return (\n    <>\n      <ContactItem id={id}>\n        <TextWrapper>\n          <Name>{name}:</Name>\n          <Number>{number}</Number>\n        </TextWrapper>\n\n        <ButtonEdit type=\"button\" onClick={toggleModal} title=\"Edit\">\n          <ImPencil2 />\n        </ButtonEdit>\n\n        <ButtonDelete\n          title=\"Delete\"\n          type=\"button\"\n          disabled={isLoading}\n          onClick={onDeleteContact}\n        >\n          <ImCross />\n        </ButtonDelete>\n      </ContactItem>\n      {addContact && <Modal toggleModal={toggleModal} id={id}></Modal>}\n    </>\n  );\n};\n\nListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ContactList = styled.ul`\n  list-style: none;\n`;\n","import { useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/filterSlice';\nimport { useGetContactsQuery } from '../../redux/contactsApi';\nimport { ListItem } from '../ListItem/ListItem'\nimport { ContactList} from './List.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const List = () => {\n  const { data: contacts = [] } = useGetContactsQuery();\n  const { filter } = useSelector(state => getFilter(state));\n  const { isLoading } = useGetContactsQuery();\n\n  const getVisibleContact = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const visibleContact = getVisibleContact();\n\n  return (\n    <>\n    <ContactList>\n      {isLoading ? <Loader/> :\n        (visibleContact.map(({ id, name, number }) => {\n          return (\n            <ListItem\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n            />\n          );\n        })\n      ) }\n        </ContactList>\n      </>\n  )\n};\n","import { Box } from '../../components/Box/Box';\nimport { Form } from '../../components/Form/Form';\nimport { Filter } from '../../components/Filter/Filter';\nimport { List } from '../../components/List/List';\n\nexport default function PhoneBook() {\n  return (\n      <Box mx='auto' maxWidth={500} >\n        <h2>Phonebook</h2>\n        <Form />\n        <h2>Contacts</h2>\n        <Filter />\n        <List />\n      </Box>\n  );\n};\n\n\n"],"names":["Label","styled","Input","Button","Icon","ImPlus","Form","useState","name","setName","number","setNumber","nameInputId","nanoid","telInputId","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","isLoading","handleChange","target","value","Box","as","onSubmit","event","preventDefault","newContact","id","find","contact","toLowerCase","Notiflix","autoComplete","display","flexDirection","maxWidth","mx","htmlFor","type","pattern","title","required","onChange","disabled","Filter","filter","useSelector","selectFilter","dispatch","useDispatch","changeFilter","placeholder","BackDrop","FormBox","StyleUpdateForm","CloseButton","EditButton","UpdateForm","toggleModal","useUpdateContactMutation","editContact","onEditContact","console","log","onClick","Modal","ContactItem","TextWrapper","Name","Number","ButtonDelete","ButtonEdit","props","theme","radii","round","colors","white","ListItem","useDeleteContactMutation","deleteContact","setAddContact","prevState","currentTarget","parentElement","ContactList","List","state","getFilter","visibleContact","includes","Loader","map","PhoneBook"],"sourceRoot":""}